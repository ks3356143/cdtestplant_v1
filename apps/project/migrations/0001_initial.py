# Generated by Django 4.2.13 on 2024-07-03 10:38

import apps.project.models
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abbreviation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='缩略语', max_length=64, verbose_name='缩略语')),
                ('des', models.CharField(help_text='描述', max_length=256, verbose_name='描述')),
            ],
            options={
                'verbose_name': '缩略语和行业词汇',
                'verbose_name_plural': '缩略语和行业词汇',
                'db_table': 'project_abbreviation',
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('ident', models.CharField(blank=True, help_text='用例标识', max_length=64, null=True, verbose_name='用例标识')),
                ('name', models.CharField(blank=True, help_text='用例名称', max_length=64, null=True, verbose_name='用例名称')),
                ('initialization', models.CharField(blank=True, help_text='初始化条件', max_length=128, null=True, verbose_name='初始条件')),
                ('premise', models.CharField(blank=True, help_text='前提和约束', max_length=128, null=True, verbose_name='前提和约束')),
                ('summarize', models.CharField(blank=True, help_text='用例综述', max_length=256, null=True, verbose_name='用例综述')),
                ('designPerson', models.CharField(blank=True, help_text='设计人员', max_length=16, null=True, verbose_name='设计人员')),
                ('testPerson', models.CharField(blank=True, help_text='测试人员', max_length=16, null=True, verbose_name='测试人员')),
                ('monitorPerson', models.CharField(blank=True, help_text='审核人员', max_length=16, null=True, verbose_name='审核人员')),
                ('isLeaf', models.BooleanField(default=True, help_text='树状图最后一个节点', verbose_name='树状图最后一个节点')),
                ('title', models.CharField(blank=True, help_text='树-名称', max_length=64, null=True, verbose_name='树-名称')),
                ('key', models.CharField(blank=True, help_text='round-dut-designkey-testdemand-case', max_length=64, null=True, verbose_name='round-dut-designkey-testdemand-case')),
                ('level', models.CharField(blank=True, default=4, help_text='树-level', max_length=64, null=True, verbose_name='树-level')),
                ('exe_time', models.DateField(blank=True, help_text='执行时间', null=True, verbose_name='执行时间')),
            ],
            options={
                'verbose_name': '测试用例',
                'verbose_name_plural': '测试用例',
                'db_table': 'project_case',
                'ordering': ('key',),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('key', models.IntegerField(auto_created=True, help_text='公司编号', verbose_name='公司编号')),
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('entrust_person', models.CharField(blank=True, help_text='法人', max_length=16, verbose_name='法人')),
                ('name', models.CharField(blank=True, help_text='公司名称', max_length=64, verbose_name='公司名称')),
                ('addr', models.CharField(blank=True, help_text='公司地址', max_length=64, verbose_name='公司地址')),
            ],
            options={
                'verbose_name': '委托方、研制方、测试方信息',
                'verbose_name_plural': '委托方、研制方、测试方信息',
                'db_table': 'contact_gongsi',
                'ordering': ('create_datetime',),
            },
        ),
        migrations.CreateModel(
            name='Design',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('ident', models.CharField(blank=True, help_text='设计需求标识', max_length=64, null=True, verbose_name='设计需求标识')),
                ('name', models.CharField(blank=True, help_text='设计需求名称', max_length=64, null=True, verbose_name='设计需求名称')),
                ('demandType', models.CharField(blank=True, help_text='设计需求类型', max_length=8, null=True, verbose_name='设计需求类型')),
                ('description', tinymce.models.HTMLField(blank=True, help_text='设计需求描述', null=True, verbose_name='设计需求描述')),
                ('title', models.CharField(blank=True, help_text='树-名称', max_length=64, null=True, verbose_name='树-名称')),
                ('key', models.CharField(blank=True, help_text='round-dut-designkey', max_length=64, null=True, verbose_name='round-dut-designkey')),
                ('level', models.CharField(blank=True, default=2, help_text='树-level', max_length=64, null=True, verbose_name='树-level')),
                ('chapter', models.CharField(blank=True, help_text='设计需求章节号', max_length=64, verbose_name='设计需求章节号')),
                ('source', models.CharField(blank=True, default='', help_text='接口来源', max_length=64, null=True, verbose_name='接口来源')),
                ('to', models.CharField(blank=True, default='', help_text='接口目的地', max_length=64, null=True, verbose_name='接口目的地')),
                ('type', models.CharField(blank=True, default='', help_text='接口类型', max_length=64, null=True, verbose_name='接口类型')),
                ('protocal', models.CharField(blank=True, default='', help_text='接口协议', max_length=64, null=True, verbose_name='接口协议')),
            ],
            options={
                'verbose_name': '测试需求',
                'verbose_name_plural': '测试需求',
                'db_table': 'project_design',
                'ordering': ('key',),
            },
        ),
        migrations.CreateModel(
            name='Dut',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('ident', models.CharField(blank=True, help_text='被测件标识', max_length=64, null=True, verbose_name='被测件标识')),
                ('type', models.CharField(blank=True, help_text='被测件类型', max_length=16, null=True, verbose_name='被测件类型')),
                ('name', models.CharField(blank=True, help_text='被测件名称', max_length=64, null=True, verbose_name='被测件名称')),
                ('black_line', models.CharField(blank=True, help_text='空行代码数', max_length=64, null=True, verbose_name='空行代码数')),
                ('code_line', models.CharField(blank=True, help_text='纯代码行数', max_length=64, null=True, verbose_name='纯代码行数')),
                ('mix_line', models.CharField(blank=True, help_text='混合行数', max_length=64, null=True, verbose_name='混合行数')),
                ('comment_line', models.CharField(blank=True, help_text='纯注释行', max_length=64, null=True, verbose_name='纯注释行')),
                ('title', models.CharField(blank=True, help_text='树-名称', max_length=64, null=True, verbose_name='树-名称')),
                ('key', models.CharField(blank=True, help_text='树-key', max_length=64, null=True, verbose_name='树-key')),
                ('version', models.CharField(blank=True, help_text='发布版本', max_length=64, null=True, verbose_name='发布版本')),
                ('release_union', models.CharField(blank=True, help_text='发布版本', max_length=64, null=True, verbose_name='发布版本')),
                ('release_date', models.DateField(auto_now_add=True, help_text='发布时间', null=True, verbose_name='发布时间')),
                ('ref', models.CharField(blank=True, help_text='文档编号', max_length=32, null=True, verbose_name='文档编号')),
                ('level', models.CharField(blank=True, default=1, help_text='树-level', max_length=64, null=True, verbose_name='树-level')),
            ],
            options={
                'verbose_name': '被测件信息',
                'verbose_name_plural': '被测件信息',
                'db_table': 'project_dut',
                'ordering': ('key',),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('ident', models.CharField(blank=True, help_text='项目标识', max_length=64, null=True, verbose_name='项目标识')),
                ('name', models.CharField(blank=True, help_text='项目名称', max_length=100, null=True, verbose_name='项目名称')),
                ('engin_model', models.CharField(blank=True, help_text='工程型号', max_length=64, null=True, verbose_name='工程型号')),
                ('section_system', models.CharField(blank=True, help_text='分系统', max_length=64, null=True, verbose_name='分系统')),
                ('sub_system', models.CharField(blank=True, help_text='子系统', max_length=64, null=True, verbose_name='子系统')),
                ('device', models.CharField(blank=True, help_text='设备', max_length=64, null=True, verbose_name='设备')),
                ('beginTime', models.DateField(auto_now_add=True, help_text='开始时间', null=True, verbose_name='开始时间')),
                ('endTime', models.DateField(auto_now_add=True, help_text='结束时间', null=True, verbose_name='结束时间')),
                ('duty_person', models.CharField(help_text='负责人', max_length=64, verbose_name='负责人')),
                ('member', models.JSONField(blank=True, default=apps.project.models.create_list, help_text='项目成员', null=True, verbose_name='项目成员')),
                ('quality_person', models.CharField(help_text='质量保证员', max_length=64, verbose_name='质量保证员')),
                ('vise_person', models.CharField(help_text='质量监督员', max_length=64, verbose_name='质量监督员')),
                ('config_person', models.CharField(help_text='配置管理员', max_length=64, verbose_name='配置管理员')),
                ('security_level', models.CharField(blank=True, help_text='安全等级', max_length=8, null=True, verbose_name='安全等级')),
                ('test_level', models.JSONField(blank=True, default=apps.project.models.create_list, help_text='测试级别', null=True, verbose_name='测试级别')),
                ('plant_type', models.JSONField(blank=True, default=apps.project.models.create_list, help_text='平台类型', null=True, verbose_name='平台类型')),
                ('report_type', models.CharField(blank=True, help_text='报告类型', max_length=64, null=True, verbose_name='报告类型')),
                ('language', models.JSONField(blank=True, default=apps.project.models.create_list, help_text='被测语言', null=True, verbose_name='被测语言')),
                ('standard', models.JSONField(blank=True, default=apps.project.models.create_list, help_text='依据标准', null=True, verbose_name='依据标准')),
                ('entrust_unit', models.CharField(help_text='委托方单位', max_length=64, verbose_name='委托方单位')),
                ('entrust_contact', models.CharField(blank=True, help_text='委托方联系人', max_length=64, null=True, verbose_name='委托方联系人')),
                ('entrust_contact_phone', models.CharField(blank=True, help_text='委托方电话', max_length=64, null=True, verbose_name='委托方电话')),
                ('entrust_email', models.CharField(blank=True, help_text='委托方邮箱', max_length=64, null=True, verbose_name='委托方邮箱')),
                ('dev_unit', models.CharField(help_text='开发方单位', max_length=64, verbose_name='开发方单位')),
                ('dev_contact', models.CharField(blank=True, help_text='研制方联系人', max_length=64, null=True, verbose_name='研制方联系人')),
                ('dev_contact_phone', models.CharField(blank=True, help_text='研制方电话', max_length=64, null=True, verbose_name='研制方电话')),
                ('dev_email', models.CharField(blank=True, help_text='研制方邮箱', max_length=64, null=True, verbose_name='研制方邮箱')),
                ('test_unit', models.CharField(help_text='测试方单位', max_length=64, verbose_name='测试方单位')),
                ('test_contact', models.CharField(blank=True, help_text='测评中心联系人', max_length=64, null=True, verbose_name='测评中心联系人')),
                ('test_contact_phone', models.CharField(blank=True, help_text='测评中心电话', max_length=64, null=True, verbose_name='测评中心电话')),
                ('test_email', models.CharField(blank=True, help_text='测评中心邮箱', max_length=64, null=True, verbose_name='测评中心邮箱')),
                ('step', models.CharField(blank=True, help_text='项目阶段', max_length=8, null=True, verbose_name='项目阶段')),
                ('abbreviation', models.JSONField(blank=True, default=apps.project.models.create_list, help_text='缩略语', null=True, verbose_name='缩略语')),
                ('soft_type', models.SmallIntegerField(choices=[(1, '新研'), (2, '改造'), (3, '沿用')], default=1, verbose_name='软件类型')),
                ('runtime', models.CharField(blank=True, help_text='运行环境', max_length=8, null=True, verbose_name='运行环境')),
                ('devplant', models.CharField(blank=True, help_text='开发环境', max_length=8, null=True, verbose_name='开发环境')),
            ],
            options={
                'verbose_name': '项目信息',
                'verbose_name_plural': '项目信息',
                'db_table': 'project_project',
                'ordering': ('-create_datetime',),
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('ident', models.CharField(blank=True, help_text='轮次标识', max_length=64, null=True, verbose_name='轮次标识')),
                ('name', models.CharField(blank=True, help_text='轮次名称', max_length=64, null=True, verbose_name='轮次名称')),
                ('beginTime', models.DateField(auto_now_add=True, help_text='开始时间', null=True, verbose_name='开始时间')),
                ('endTime', models.DateField(auto_now_add=True, help_text='结束时间', null=True, verbose_name='结束时间')),
                ('speedGrade', models.CharField(blank=True, help_text='速度等级', max_length=64, null=True, verbose_name='速度等级')),
                ('package', models.CharField(blank=True, help_text='封装', max_length=64, null=True, verbose_name='封装')),
                ('grade', models.CharField(blank=True, help_text='等级', max_length=64, null=True, verbose_name='等级')),
                ('best_condition_voltage', models.CharField(blank=True, help_text='最优工况电压', max_length=64, null=True, verbose_name='最优工况电压')),
                ('best_condition_tem', models.CharField(blank=True, help_text='最优工况温度', max_length=64, null=True, verbose_name='最优工况温度')),
                ('typical_condition_voltage', models.CharField(blank=True, help_text='典型工况电压', max_length=64, null=True, verbose_name='典型工况电压')),
                ('typical_condition_tem', models.CharField(blank=True, help_text='典型工况温度', max_length=64, null=True, verbose_name='典型工况温度')),
                ('low_condition_voltage', models.CharField(blank=True, help_text='最低工况电压', max_length=64, null=True, verbose_name='最低工况电压')),
                ('low_condition_tem', models.CharField(blank=True, help_text='最低工况温度', max_length=64, null=True, verbose_name='最低工况温度')),
                ('level', models.CharField(default='0', help_text='树状级别第一级', max_length=15, verbose_name='树状级别第一级')),
                ('key', models.CharField(help_text='给前端的树状级别', max_length=15, verbose_name='给前端的树状级别')),
                ('title', models.CharField(help_text='给前端的name', max_length=15, verbose_name='给前端的name')),
                ('location', models.CharField(help_text='测评执行地点', max_length=30, verbose_name='测评执行地点')),
                ('project', models.ForeignKey(db_constraint=False, help_text='归属项目', on_delete=django.db.models.deletion.CASCADE, related_name='pField', related_query_name='pQuery', to='project.project', verbose_name='归属项目')),
            ],
            options={
                'verbose_name': '轮次信息',
                'verbose_name_plural': '轮次信息',
                'db_table': 'project_round',
                'ordering': ('key',),
            },
        ),
        migrations.CreateModel(
            name='TestDemand',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('ident', models.CharField(blank=True, help_text='测试需求标识', max_length=64, null=True, verbose_name='测试需求标识')),
                ('name', models.CharField(blank=True, help_text='测试需求名称', max_length=64, null=True, verbose_name='测试需求名称')),
                ('adequacy', models.CharField(blank=True, help_text='充分条件', max_length=256, null=True, verbose_name='充分条件')),
                ('priority', models.CharField(blank=True, help_text='优先级', max_length=8, null=True, verbose_name='优先级')),
                ('testType', models.CharField(blank=True, default='1', help_text='测试类型', max_length=8, null=True, verbose_name='测试类型')),
                ('testMethod', models.JSONField(blank=True, default=apps.project.models.create_list, help_text='测试方法', verbose_name='测试方法')),
                ('title', models.CharField(blank=True, help_text='树-名称', max_length=64, null=True, verbose_name='树-名称')),
                ('key', models.CharField(blank=True, help_text='round-dut-designkey-testdemand', max_length=64, null=True, verbose_name='round-dut-designkey-testdemand')),
                ('level', models.CharField(blank=True, default=3, help_text='树-level', max_length=64, null=True, verbose_name='树-level')),
                ('design', models.ForeignKey(db_constraint=False, help_text='归属设计需求', on_delete=django.db.models.deletion.CASCADE, related_name='dtField', related_query_name='dtQuery', to='project.design', verbose_name='归属设计需求')),
                ('dut', models.ForeignKey(db_constraint=False, help_text='归属被测件', on_delete=django.db.models.deletion.CASCADE, related_name='dutField', related_query_name='dtQuery', to='project.dut', verbose_name='归属被测件')),
                ('otherDesign', models.ManyToManyField(blank=True, db_constraint=False, related_name='odField', related_query_name='odQuery', to='project.design')),
                ('project', models.ForeignKey(db_constraint=False, help_text='归属项目', on_delete=django.db.models.deletion.CASCADE, related_name='ptField', related_query_name='ptQuery', to='project.project', verbose_name='归属项目')),
                ('round', models.ForeignKey(db_constraint=False, help_text='归属轮次', on_delete=django.db.models.deletion.CASCADE, related_name='rtField', related_query_name='dutQuery', to='project.round', verbose_name='归属轮次')),
            ],
            options={
                'verbose_name': '核心模型',
                'verbose_name_plural': '核心模型',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestDemandContent',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('subName', models.CharField(blank=True, max_length=1024, null=True, verbose_name='测试子项名称')),
                ('subDesc', models.CharField(blank=True, max_length=1024, null=True, verbose_name='测试子项描述-对应表格测试项描述')),
                ('condition', models.CharField(blank=True, max_length=1024, null=True, verbose_name='测试子项具体条件')),
                ('operation', models.CharField(blank=True, max_length=3072, null=True, verbose_name='测试子项操作')),
                ('observe', models.CharField(blank=True, max_length=1024, null=True, verbose_name='测试子项观察')),
                ('expect', models.CharField(blank=True, max_length=1024, null=True, verbose_name='期望')),
                ('testDemand', models.ForeignKey(db_constraint=False, help_text='归属的测试项', on_delete=django.db.models.deletion.CASCADE, related_name='testQField', related_query_name='testQField', to='project.testdemand', verbose_name='归属的测试项')),
            ],
            options={
                'verbose_name': '核心模型',
                'verbose_name_plural': '核心模型',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('ident', models.CharField(blank=True, help_text='问题单标识', max_length=64, null=True, verbose_name='问题单标识')),
                ('name', models.CharField(blank=True, help_text='问题单名称', max_length=64, null=True, verbose_name='问题单名称')),
                ('status', models.CharField(blank=True, help_text='缺陷状态', max_length=8, null=True, verbose_name='缺陷状态')),
                ('grade', models.CharField(blank=True, help_text='缺陷等级', max_length=8, null=True, verbose_name='缺陷等级')),
                ('type', models.CharField(blank=True, help_text='缺陷类型', max_length=8, null=True, verbose_name='缺陷类型')),
                ('closeMethod', models.JSONField(blank=True, default=apps.project.models.create_list_1, help_text='闭环方式', null=True, verbose_name='闭环方式')),
                ('operation', tinymce.models.HTMLField(blank=True, help_text='问题描述', null=True, verbose_name='问题描述')),
                ('result', tinymce.models.HTMLField(blank=True, help_text='问题结果/影响', null=True, verbose_name='问题结果/影响')),
                ('postPerson', models.CharField(blank=True, help_text='提出人员', max_length=16, null=True, verbose_name='提出人员')),
                ('postDate', models.DateField(auto_now_add=True, help_text='提单日期', null=True, verbose_name='提单日期')),
                ('designerPerson', models.CharField(blank=True, help_text='开发人员', max_length=16, null=True, verbose_name='开发人员')),
                ('designDate', models.DateField(auto_now_add=True, help_text='确认日期', null=True, verbose_name='确认日期')),
                ('verifyPerson', models.CharField(blank=True, help_text='验证人员', max_length=16, null=True, verbose_name='验证人员')),
                ('verifyDate', models.DateField(auto_now_add=True, help_text='验证日期', null=True, verbose_name='验证日期')),
                ('solve', models.TextField(blank=True, help_text='开发人员填写-改正措施，该字段需要关联“status=1”', null=True, verbose_name='开发人员填写-改正措施')),
                ('analysis', tinymce.models.HTMLField(blank=True, help_text='开发人员填写-原因分析', null=True, verbose_name='开发人员填写-原因分析')),
                ('effect_scope', tinymce.models.HTMLField(blank=True, help_text='开发人员填写-影响域分析', null=True, verbose_name='开发人员填写-影响域分析')),
                ('verify_result', tinymce.models.HTMLField(blank=True, help_text='回归结果', null=True, verbose_name='回归结果')),
                ('case', models.ManyToManyField(db_constraint=False, help_text='归属测试用例-多对多', related_name='caseField', related_query_name='caseQuery', to='project.case', verbose_name='归属测试用例')),
                ('project', models.ForeignKey(db_constraint=False, help_text='归属项目', on_delete=django.db.models.deletion.CASCADE, related_name='projField', related_query_name='projQuery', to='project.project', verbose_name='归属项目')),
            ],
            options={
                'verbose_name': '问题单',
                'verbose_name_plural': '问题单',
                'db_table': 'project_problem',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='dut',
            name='project',
            field=models.ForeignKey(db_constraint=False, help_text='归属项目', on_delete=django.db.models.deletion.CASCADE, related_name='pdField', related_query_name='pdQuery', to='project.project', verbose_name='归属项目'),
        ),
        migrations.AddField(
            model_name='dut',
            name='round',
            field=models.ForeignKey(db_constraint=False, help_text='归属轮次', on_delete=django.db.models.deletion.CASCADE, related_name='rdField', related_query_name='rdQuery', to='project.round', verbose_name='归属轮次'),
        ),
        migrations.AddField(
            model_name='design',
            name='dut',
            field=models.ForeignKey(db_constraint=False, help_text='归属轮次', on_delete=django.db.models.deletion.CASCADE, related_name='rsField', related_query_name='rsQuery', to='project.dut', verbose_name='归属轮次'),
        ),
        migrations.AddField(
            model_name='design',
            name='project',
            field=models.ForeignKey(db_constraint=False, help_text='归属项目', on_delete=django.db.models.deletion.CASCADE, related_name='psField', related_query_name='psQuery', to='project.project', verbose_name='归属项目'),
        ),
        migrations.AddField(
            model_name='design',
            name='round',
            field=models.ForeignKey(db_constraint=False, help_text='归属轮次', on_delete=django.db.models.deletion.CASCADE, related_name='dsField', related_query_name='rsQuery', to='project.round', verbose_name='归属轮次'),
        ),
        migrations.CreateModel(
            name='CaseStep',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('operation', tinymce.models.HTMLField(blank=True, help_text='测试步骤-操作', null=True, verbose_name='测试步骤-操作')),
                ('expect', models.CharField(blank=True, help_text='用例预期', max_length=64, null=True, verbose_name='用例预期')),
                ('result', tinymce.models.HTMLField(blank=True, help_text='测试步骤-结果', null=True, verbose_name='测试步骤-结果')),
                ('passed', models.CharField(blank=True, default='3', help_text='是否通过', max_length=8, null=True, verbose_name='是否通过')),
                ('status', models.CharField(blank=True, default='3', help_text='执行状态', max_length=8, null=True, verbose_name='执行状态')),
                ('case', models.ForeignKey(db_constraint=False, help_text='归属的测试用例', on_delete=django.db.models.deletion.CASCADE, related_name='step', related_query_name='stepQ', to='project.case', verbose_name='归属的测试用例')),
            ],
            options={
                'verbose_name': '核心模型',
                'verbose_name_plural': '核心模型',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='case',
            name='design',
            field=models.ForeignKey(db_constraint=False, help_text='归属设计需求', on_delete=django.db.models.deletion.CASCADE, related_name='dcField', related_query_name='dcQuery', to='project.design', verbose_name='归属设计需求'),
        ),
        migrations.AddField(
            model_name='case',
            name='dut',
            field=models.ForeignKey(db_constraint=False, help_text='归属被测件', on_delete=django.db.models.deletion.CASCADE, related_name='ducField', related_query_name='ducQuery', to='project.dut', verbose_name='归属被测件'),
        ),
        migrations.AddField(
            model_name='case',
            name='project',
            field=models.ForeignKey(db_constraint=False, help_text='归属项目', on_delete=django.db.models.deletion.CASCADE, related_name='pcField', related_query_name='pcQuery', to='project.project', verbose_name='归属项目'),
        ),
        migrations.AddField(
            model_name='case',
            name='round',
            field=models.ForeignKey(db_constraint=False, help_text='归属轮次', on_delete=django.db.models.deletion.CASCADE, related_name='rcField', related_query_name='rcQuery', to='project.round', verbose_name='归属轮次'),
        ),
        migrations.AddField(
            model_name='case',
            name='test',
            field=models.ForeignKey(db_constraint=False, help_text='归属测试需求', on_delete=django.db.models.deletion.CASCADE, related_name='tcField', related_query_name='tcQuery', to='project.testdemand', verbose_name='归属测试需求'),
        ),
    ]
